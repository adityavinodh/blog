[{"content":"Activity Details  Training to run in a Marathon\n  Student’s Name: Aditya Vinodh Arjun\nActivity Name: Marathon practice\nTotal number of Hours: 70 (Current - Subject to change)\nStart Date: January 2, 2021\nEnd Date: Ongoing\n I have always liked to stay fit and explore the limits to which I can perform athletically. As a result, running in a marathon has been something that I have always wanted to do during a young age, but I never got the time to register and participate. Adding to this was the fact that I was not eligible to participate due to age registrations. Entering into the final two years of my high school life, I felt it was high time to start working out and staying at the top of my fitness. This was especially important as my physical activity has severely been restricted due to lowdowns to combat the COVID-19 virus during the pandemic. Having to sit in front of the laptop screen for the entire day, both during school and after to complete assignments, started to take a toll on both my physical and mental health. A figured this is the perfect time to start working towards my goal and also to encourage my friends and family who have issues getting started.\n Reflection Reflection for the first two weeks.\n1st Week:\nI expected to not be at peak performance because there has been a huge gap between my last run. As expected, I faced difficulties completing my run on the first 2 days. I was able to complete 2 laps which was around 3 km. After completing the run on those days, I felt very exhausted. However, the physical exhaustion was paired with a feeling of pleasure and pride. I expected this to be the commonly referred to biological term of \u0026ldquo;runner\u0026rsquo;s high\u0026rdquo; as there was a release of \u0026lsquo;feel good\u0026rsquo; hormones that was responsible for this. But I feel there was an additional component of self-pride mentally as I felt proud of myself for accomplishing something. It felt like I could do anything for those few minutes. This feeling helped me pull through the rest of the week despite the physical exertion.\n2nd Week:\nThis week was very exciting and fun. I started out with completing 3 laps, and ended with my completion of 5 laps. I was very proud of my progress. It was getting a little hectic, and I missed out on one day. But I managed to get back on track and complete my practice. One additional thing that I learnt during this week was the importance of reflection. To elaborate, I would sometimes over exert myself during the sessions, and this would cause injuries that would take multiple days to recover from. Although it is important to push one\u0026rsquo;s self during a workout, I learnt that there is no fixed path or framework that anyone can follow. All training must be personalized based on the individual, and it is important to listen to one\u0026rsquo;s own body. I started to ease myself the following day if I felt a little strained, and then picked up the next day.\n5th Week:\nAt the end of the 5th week, I am writing this entry to sum up my overall experience and reflection. I am now able to complete 15K and am nearing my goal. I will continue my practice and effort for the sake of my health and to reach my goal of participating in a marathon. The most important thing that I have come to realize is the skill of Reflection that I have acquired. I have started to assess my performance and activity after every session to understand where I stand. This has helped me to prepare effectively for the following day and adapt my schedule. Doing this has improved my productivity in general and set better targets for my running.\n","permalink":"https://blog.adityaone.com/cas/marathon-training/","summary":"Practicing for the Marathon","title":"Marathon Training"},{"content":"Activity Details  Creating a full-fledged vaccination camp management software to manage crowds, distribution of vaccines, notifications, and to effectively socially distance.\n Student’s Name: Aditya Vinodh Arjun\nActivity Name: COVID Vaccine Camp Management\nTotal number of Hours: 200 (Current - Subject to change)\nStart Date: Jun 15, 2021\nEnd Date: Ongoing\n This is an initiative that I started with the influence and support of the people around me, namely my close family and friends. Even though I was not eligible to get vaccinated during the COVID-19 pandemic, I had witnessed the situation first hand and had heard numerous experiences from others who had gotten vaccinated. These experiences included extremely long wait times, no place to socially distance, and numerous occasions where the vaccine was not available to due to shortages or wastage because an insufficient number of people showed up. This situation was very personal to me, and I wanted to do what I could to help my community, so when I found out that a camp was being organized in my local colony, I volunteered to set up a fully automated system to help volunteers and managers to oversee the entire operation and send out digital forms to help people to register ahead of time. This would give the volunteers on the ground, much more time to prepare accordingly. This venture got me connected with the members of the regional Rotary Club. After a presentation to their team, they seemed very interested to adopt this tool in all of their camps, as they were the ones who were in charge of distributing the vaccine for my city. After a few modifications that they requested, I started to roll out this tool to a few pilot camps to see how it helped in the real world.\n The exact technical details of this project are as follows. I had worked on the idea independently, and after approval by the people managing the camps, I had proceeded with implementing the application. I developed the entire backend infrastructure that would manage all the processes, and created an automated system that would automatically spin up a new server for each camp. This project utilized Node.js, Heroku, Google Cloud APIs, Twilio, Sendgrid, and MongoDB.\n Reflection Working on this project was extremely hectic and difficult to manage as it was extremely time-intensive. It was difficult to manage my time as I was very busy in school, as well as having to manage my extracurriculars and SAT practice. The most important skill I had learnt out of this experience was time management.\nI also had to work on the development, and regularly discuss and attend meetings with senior management that was responsible for the camp. Communication was crucial to effectively communicate my point and get work done faster. This was a completely new experience with me, as it gave me my first real-world experience. I had to work independently, and in groups. Being open-minded was essential to understanding others' view points, as well as being able to understand constructive feedback and suggestions for myself.\nMost importantly, I had to always think in terms of others' perspectives as I was designing and developing an app that was going to be used by other people in my community, not me. I had to relate with them, and empathize with their situation when considering different features to implement. My community is very diverse, and there a lot of people who cannot even afford an economical phone. I had to accommodate everyone without accidentally discriminating anyone because they lack access to some resource.\nLearning Outcomes Identify your own strengths and develop areas for personal growth. I have been aware of most of my strengths and weaknesses from the beginning of this project, and that is how I planned out the development accordingly. But apart from this inital self-analysis, I got to learn much more about myself.\nMy strengths included self-determination and being a risk-taker. I am a very curious person and I will go out of my way to learn and explore. As this was a project was something that I had a lot of interest in, I had no issues in getting work done. However, I lacked in time management skills. I often procrastinated and found it difficult to get started. This was an initial inhibitor until I learnt to control it from help from my parents. On the other hand, I have never been a good communicator. Although I could communicate simple ideas, I always hesitated to voice my opinions in a large crowd. This was a crucial skill that I developed over the course of this project, and I feel it will carry me forward in the future during my career.\nDemonstrate that challenges have been undertaken, developing new skills in the process. Few of the challenges that I faced were the lack of actual knowledge and skills to accomplish the task. Formulating algorithms and the actual idea and plan was as it quite complex. But implementing it, was an entire different ball game. However, I managed to pull through and figure out the issues I had. The main issue was the lack of support I had as I could not get in touch with anyone else who had experience with the same field.\nThe other challenge that I faced was the constant pressure and push to implement new features from other members involved in this project. Even though it was possible for me to implement features that they requested, it was important to set boundaries and goals, as this was not the only work I was doing. I needed to set a clear limit and express my intentions to the team, to effectively priortize and utilize my time.\nDemonstrate how to initiate and plan a CAS experience. My CAS experience started with a thorough understanding of the problem and situation. Only after conducting my preliminary situation and a self-assessment, I started to plan out my tasks. Think included my research to acquire the necessary knowledge and skills, as well as my actual implementation and collaborative work with everyone. On completion of this, I began monitoring and reviewing my progress and the feedback, and began incremental updates and changes to continue this work. Although the important work is completed, this project will continue to serve many citizens, and my reflection throughout this journey will be instrumental in helping me to identify problems and improve.\nShow commitment to and perseverance in CAS experiences. My commitment to this project was crucial, and without it, I would not have been able to bring it to the stage that it exists in today. I had had to over come many challenges in order to continue this work, and my determination in completing this has helped me demonstrate this. Prioritization and a frequent reminder of the end goal and purpose has helped me through this CAS experience and to develop further as an individual.\nDemonstrate the skills and recognize the benefits of working collaboratively. As mentioned above, communication and collaboration was a vital element of this CAS experience, without which I would not have been able to complete this project and reach a wide audience to actually make a meaningul impact. Working collaboratively has helped me emphasize with others and learn the vast differences in lifestyle that can occur within the same region and culture, which causes us to experience different challenges that we must solve.\nDemonstrate engagement with issues of global significance. I usually like to tie in my CAS experiences with one of the 17 UN Sustainable Development Goals, as these represent the most pressing issues of our society. Any small effort that I can contribute is better than nothing. Although there are a lot of factors involved, I feel that this is most related with and addresses the third goal:\n Goal 3 Good Health and Well-being\n The pandemic has severely impacted many people. And the people who suffer the most, are the ones that usually suffer more than the rest of the population. This crisis has increased the divide that already existed, and has sent more people into poverty. I wanted to do my best to accommodate as much as people as possible, by giving them access to the vaccine.\nRecognize and consider the ethics of choices and actions. When reaching such a wide audience, there are a lot of instances when I have to step back and consider my actions and the consequences that they might bring. I need to consider many languages, dialects, cultures, differently-abled people, citizens with a lack of smartphones or computers, etc. I cannot get into any situation where I unknowingly discriminate people from using my services just because they cannot afford a phone. Another situation that I must consider is the distribution of information. During such a crisis, there is a lot of false information circulating in the media, and it is my responsibility as a citizen to always educate people proven, factual information that can help save lives. For this reason, every line that I mention on my website, is critically reviewed to ensure there is no discrepancies, confusions, or nonfactual data that might harm my end users.\n","permalink":"https://blog.adityaone.com/cas/covid-vaccine-camp-management/","summary":"A Vaccine Camp Management Suite","title":"Covid Vaccine Camp Management"},{"content":"What is Linux? If you don\u0026rsquo;t know what Linux is, a quick skim through the intro paragraph from my Linux Guide post should get you up to speed. But in simple terms, Linux or certain Linux distros (variations) are open source operating systems which serve as an alternative to Windows or MacOS.\nSetting up a Business Setting up a business, regardless of the size, requires a lot of work. One particular task is purchasing and setting up desktop workstations and servers for your business. A common and very popular choice has always been Windows. Setting up your computers to your specification on all the machines, connecting to them to your network, and maybe setting up your own server is only the initial setup. After that, you need to do regular maintenance, at least once a month, so that you make sure that your software is up to date, security patches are installed, anti-virus checks, security audits, etc.\nEconomic benefits. Windows 10 (Home) currently costs 140 USD. The price of Windows 11 is still not clear. However, the Home edition might not be enough for your business. You might require the Pro or Enterprise Edition depending on your needs which will cost much more. But, assuming that the Home edition is fine, check out the example cost:\nFor a 10-team business that requires 10 desktop computers, the total cost of licenses required would be 1400 USD at minimum. This is in addition to the cost of the hardware, and the licenses for anti-virus software that you might have to install.\n On the other hand, if you choose Linux, it is completely free. This is because it is open source. No licenses to purchase and no anti-virus softwares to install. This is also because it is so much more secure. Because of its open source nature, it has been vetted by thousands of security experts. It also has the advantage of having less viruses made for it as it is less popular.\nYou will be saving so much money as your team begins to quickly expand. Otherwise, you will be spending unnecessarily when you are cash constrained as a small business.\nSecurity (NO VIRUSES!) As I said before, Linux is much more secure by default. A new system, is completely locked down, and its security and privilege settings are very granular. This allows you to have a very restrictive and secure setup. You will also have no fear of viruses.\nIn addition to that, being open source means that the moment a security vulnerability is identified, you can install the update or patch to fix it almost instantly. This is because it is more quickly identified and there are more people working on it.\nReliability Linux is much more stable and reliable. It has been used on servers for years and very rarely crashes. Windows on the other hand is quite error-prone and needs frequent restarts and updates. On Linux, once set up, you don\u0026rsquo;t need to worry about anything.\nEven when it comes to updates, it is completely your choice. If you don\u0026rsquo;t want to update anything, you don\u0026rsquo;t have to. You are not forced to update anything.\nConclusion Linux offers you a level of flexibility that you can not get anywhere. Give it a chance, and I am sure you will find it helpful. Lastly, certain companies offer paid services or subscriptions for support, incase you would like to reach out to an actual person and get help.\nI hope you found this article helpful. Please feel free to leave a comment or contact me incase of any queries. Thanks!\n","permalink":"https://blog.adityaone.com/blog/linux-for-businesses/","summary":"Use Linux for your business and save money on licenses and anti-virus software! Improve your productivity and efficiency with Linux.","title":"Linux for Businesses"},{"content":"What is Linux? Linux is another operating system comparable to macOS and Windows. Although it is technically not referred to as a wholesome OS like its popular counterparts, there are distributions of Linux (flavours/variations) of it which can be directly compared.\nLinux is based on UNIX, similar to macOS, but that is pretty much where the similarities end. It was created by Linus Torvalds with a free, open source license, which is the main reason it grew so much in popularity. But, the software that Linus created, is only what is called the Linux Kernel, which is not an entire operating system.\nDistributions (or distros) Other developers and companies over the years, have created their own versions of an operating system called distributions (or distro for short) building up on Linux. Few examples of these distributions are Debian, Arch Linux, Red Hat Enterprise, etc. Some of these distributions can only be used with a command-line interface (no graphical interface), but it is possible for users to install desktop environments or window managers for them to actually use it as a modern desktop operating system.\nLinux has grown in popularity over the years, and due to its free and open source nature, there are so many forks and branches of different distributions which are based on each other. An example is Ubuntu created by Canonical, one of the most popular distros in existence right now, which is based on one of the oldest distributions called Debian. Another popular distribution created by the company System76, is Pop!_OS, which is based on Ubuntu, which is based on Debian.\nThe image above shows the numerous branches or forks of one particular distribution called Red Hat which is meant for enterprise businesses.\nAdvantages of using Linux Performance and Efficiency Linux operating systems or distributions are extremely light-weight and efficient compared to their proprietary counterparts. The user is in full control of what runs on their system at all times, and any component can be removed and installed at any point of time. This causes computers to run tasks and perform much better on Linux rather on something like Windows.\nI can personally vouch for this as I have a new Dell XPS 13 with an Intel i7, which initially had Windows 10 Home pre-installed. Although there is not much of a performance difference between the Home and Pro versions, I should have been receiving excellent performance for the hardware I had. But, I often experienced sluggishness, animations losing frames, and the laptop often overheating. Once I jumped on to a linux distro (Ubuntu), I immediately experienced extremely snappy responses, and the overheating issues vanished. All of this was during regular browsing, video conferencing, etc.\nFile system This point ties in with performance. Linux uses a much more superior file system especially in contrast to Windows' FAT or NTFS. There are different variations, such as EXT4, which allow for more reliability, and much more faster and robust experience when copying, and moving around files and directories.\nSecurity Linux is vastly more secure for two main reasons. Firstly, it is not nearly as popular as Windows or MacOS, so viruses are usually not made with Linux in mind. There are very few viruses made for Linux distros and you will not be needing to install any anti-virus software. Another reason is also probably because people using Linux are usually a little more tech-savvy and are careful when installing files from the internet. As long as you are aware of the file types and permissions on your system, you shouldn\u0026rsquo;t have to worry.\nSecondly, because Linux is open source, vulnerabilities are quickly identified and patched by any knowledgeable person in the community, without having to wait for months from some company to provide a security patch. One could make the argument that if the code is open source, hackers or malicious individuals could easily exploit vulnerabilities. But, there are far more people looking to usually fix bugs and improve the system because they are the ones who are going to use it at the end of the day.\nReliability and Stability Linux is extremely stable and reliable. This is a well-known fact as it is employed in thousands of servers around the world which are running Linux continuously without any crashes or errors. Even Microsoft, which has their own Windows for Servers OS, uses Linux for their servers. They usually have high uptime and very rarely crash or provide issues.\nAnd, my most favorite feature of Linux, is that when something goes wrong, you get very descriptive error messages telling you what and where the issue has occurred. Using this information, you can most likely understand the problem and rectify it, or a quick Google search (or Brave, DuckDuckGo, etc.) will always find you the answer from countless blog posts and forums where the same question and error has probably been answered multiple times. In other OSs, it is almost impossible to get help, because when something goes wrong, it just says \u0026lsquo;Oops, something has gone wrong\u0026rsquo;, and you are pretty much helpless. Even if you try to ask someone online, there are probably a 100 possible errors which provide the same message.\nCustomizability Being open source, and further employing the concept of \u0026lsquo;everything is a file\u0026rsquo;, makes it possible to customize every aspect of the system. If you don\u0026rsquo;t like the way something looks or behaves, you can just go ahead and change it without asking anyone. Everything in Linux is just a text file, even things like the network configuration or how your display is set up. So you can just open the file with a simple text editor, and make the change.\nIf you are using a user-friendly distro, you can do this using a friendly GUI with intuitive menus so it can be done easily (just like on Windows or macOS). Other distributions which tend to be more lightweight will required users to actually dig into the files and change what they want.\nYou will be amazed to see the desktops people have created using Linux. I can argue that it is 100 times better than the ones made by Microsoft and Apple.\nPrivacy Whether you are developer writing some important code for a piece of software, or you are just a regular daily user, privacy is something you never have to worry about in Linux. Due to the same reasons I mentioned above (being open source), you will never have to worry about key loggers, or any other kind of program that will track you on your device.\nSoftware Updates Software update models depend on the distribution you are going to choose. Some have a rolling release cycle (like Arch Linux) where small incremental updates are released almost every month or week which always keeps you up-to-date with the latest bleeding-edge features. Others push updates around once or twice a year (like Ubuntu). This is generally considered a little more stable as it is more comprehensively been tested. But regardless of what release cycle is used, if you don\u0026rsquo;t want to update your computer, you do not have to. You can say good bye to the annoying windows updates that you are forced to install.\nWhen the time comes for you to update your system (only if that is what you want), then one simple click or update command, will update every single package and software on your system, including the actual OS. Updating individual packages separately is also an option.\nAnother feature about Linux that is really convenient is that for most updates, you do not have to restart or reboot your computer. This is such a time-saver, especially if you are coming from Windows. Every time you update something, or are forced to update something, you might suddenly be asked to reboot your computer. Sometimes, my drivers have suddenly stopped being able to recognize the hardware completely. But on Linux, all of this happens without requiring an update most of the time.\nUser management This might not be too important to you, but the way Linux handles users is vastly superior. Since it was initially not meant to be used as a traditional desktop, rather on servers, Linux has the capability of multiple users logging into the same computer at the same time and working on something. This could be very useful if you are using it for a server, or just a main computer in your home where you want multiple family members to be able to use it and enjoy their content remotely at the same time.\nIn addition to multiple simultaneous users, permissions are extremely strict and granular. By default, new users do not have most file access permissions (read, write, executable, etc.). You can specifically add permissions to each user, or add users to groups, and then add permissions for users of the group. Furthermore, the permissions that you add can be incredibly granular, such as for a specific file or directory. This also prevents the risk of some malicious file, script, or virus that somehow has made its way to your computer, to actually do any damage.\nSoftware management Finally, linux fully embraces the open source idealogy. Most software that is used is open source, but also includes proprietary software. But, the main difference from Windows and macOS is how Linux decides to manage software. All distributions ship with a package manager. This is the default on the system, but you also have the option to install additional ones. A package manager is a tool to help you install any software you want. It maintains a repository of software developed by many developers. As long as the software you want is available in the repository, a simple click or command with the program name is enough to install the entire software with all its dependencies. No annoying installation wizards. It takes care of the entire setup for you.\nIf the software is not available in the repository, maybe because it is proprietary, you have a few options. Some popular distributions include repositories where all the software is contributed by individual users and developers. The information and instructions to install the software will be provided by the company or developer (usually on their website). So, you can download it from there. The last option is to compile it from source. This is something that will not make sense for the average user, but is still an option. It is very beneficial even though it is difficult, as it allows for you to use a piece of software that would otherwise not be available. Basically it means, you download the source code (the actual code that the developers wrote), download and install any necessary dependencies, and then compile the app yourself for it to be run on your system. Usually this compilation step is done by the developers, and all you need to do is install the actually binary file (.exe, .dmg, .pkg, .deb, .rpm, etc.) and do a quick install.\nGetting Started Prerequisites There are pretty much no prerequisites or minimum system requirements. All you need is a basic understanding of what Linux is, so you know what you are actually doing and getting yourself into. And most importantly, you need a working computer for you to install Linux. Any computer will do, even if it is around 10-15 years old, just make sure you have backed up all your files and are ready to format it.\nChoosing a distro This is your starting point. But the most important thing you should know, and you will hear this advice everywhere, is to not distro hop. Choose one, use it as your daily driver at least for 6 months, get a good feel for it, start customizing it to your taste, and then you can change distributions if you want. This most common misconception is to change distros because you think another distro looks better.\nDesktop Environments If you choose Ubuntu for example, it uses a desktop environment called GNOME. This is the default desktop environment that it ships with. This is what gives it the familiar look and feel. If you don\u0026rsquo;t like it, you can install a different one, and it will look completely different. So, if you find a picture of a distro that looks very nice, instead of changing distros, find out what desktop environments and configuration they are using, and just modify your existing setup. It is extremely simple, just a single one-line command will get the job done.\n  GNOME Desktop\n    KDE Plasma Desktop\n   For absolute beginners (and anyone with a brief understand - less than 6 months of hands-on experience), I recommend Ubuntu, Pop!_OS, or Linux Mint. These distros are very beginner friendly, have an easy trouble-free installation, and has the tools that you need to work right out of the box.\nIf you want a polished desktop with a slight resemblance to macOS, then Ubuntu or popOS might be better, as they use the GNOME desktop environment. Linux Mint uses Cinnnamon, a desktop environment from the creators of Linux Mint itself. This will be much easier for a transitioning Windows user. Even though it is customizable, it might not look as modern or polished as Ubuntu or popOS right out of the box.\nPreparing for Installation Once you have chosen the distribution, head over to the website which I have referenced above. Click on the name of the distribution to navigate to the respective website.\nNavigate to the download section and download the disk image. Usually there is just one download button, which will do the job, sometimes it might have different versions like stable, unstable, developer, insiders, VM images, etc. Just choose the main stable one. It is also possible that you might have to choose the correct download depending on the CPU architecture (Intel - X86-64, ARM, etc.).\nOnce you download the file make sure it ends with \u0026lsquo;.iso\u0026rsquo;. That is the disk image for the OS.\nPreparing the installation medium Now, we need to create a bootable USB drive to install the OS. Traditionally CDs or DVDs were used, but know using a USB Flash Drive is the norm. There are programs that will help us easily format our flash drive in the right way with our disk image on it such that the computer will be able to recognize it and boot from it. I recommend balenaEthcer as it is cross-compatible with Windows, macOS and Linux, so that the steps won\u0026rsquo;t change. In addition to that, it is dead simple to use.\nGo to the balenaEtcher site and download their tool. Once you have downloaded and installed it, plug in your flash drive. Make sure the contents of the flash drive are safely backed up somewhere else, as we are going to completely format it and write it over. Once you are sure that the flash drive is safe to be formatted, open up balenaEthcer.\nClick on select file, and select the ISO file you just downloaded. Then select the flash drive, which should automatically be selected if it is the only one plugged in. Make sure that the right drive selected. Then proceed, and in a few minutes your flash drive will be ready to install the distribution.\nInstalling on Physical Hardware  Warning: This is a beginner\u0026rsquo;s guide and will go over the setup to install the Linux distro on your entire system, formatting your drive in the process. It will not go over dual-booting, creating a separate partition, etc. That will be posted soon in a future post. PLEASE BACKUP your entire data in advance as all of your files and the OS will get deleted.\n Please read the above warning before continuing. An option to explore if you don\u0026rsquo;t want to immediately install on actual hardware is a virtual machine. Software like virtualbox from Oracle allow you to quickly and easily create virtual machines (isolated boxes) running any distro or OS you want without affecting your computer. However, it has a minimum hardware requirement of at least 8GB of RAM/memory, at least 100GB of disk space, etc. to run smoothly.\n Plug in your flash drive and boot up your computer. Enter the BIOS setup in your laptop or computer and make the following changes. You have to do this while your computer starts/boots up. This can be done usually by pressing F2, but it might differ depending on the computer you have. A quick search for the brand or hardware that you are using will get you the right key.\nThen, make sure to set the flash drive to be at the top of the boot order. This will ensure that we boot from the flash drive instead of from the Hard Drive or SSD the normal way.\nOnce you are done, exit the setup, and the distro of your choice should boot up. If it doesn\u0026rsquo;t, then enter the BIOS setup and try toggling the option for Secure Boot.\n When you see the desktop UI, you should be able to see some dialog, button or modal to install the Distro. Click it and follow the instructions. The setup is very simple and self-explanatory. I am just going to give you the choices that are important, and the gotchas.\nUsing SSDs\nIf you are using a SSD instead of a Hard Drive, it might not be detected. When you get to the section where it asks you to select the disk you want to use, make sure you check the size. It will not be exact, but make sure it is approximately similar to the maximum capacity of the SSD. If it is not, then you have to go into the boot setup again, and navigate to the section for SSDs. The name will depend on the computer you are using. Change Intel RST to AHCI. Then boot from the USB again, and you should be able to see your SSD correctly identified.\n If it asks if you want a minimal or Normal installation, it depends on your preference. It is again self-explanatory, but anyways, it just means that they will pre-install helpful software such as an Office Suite, a video player, etc. to help you start using the computer right away.\nMake sure you select the option to Download Updates while Installing so that it gives you a fully updated system. Most importantly, select the option to install proprietary drivers to make sure you can make use of your hardware to its fullest potential.\nThen, choose the option to erase disk and install. This is the simplest option which will delete all your previous data and OS. Make sure that you have backed up your data. There are other options also to install it alongside the existing OS (dual-boot), but that is slightly complicated as you have to manually partition your hard drive or SSD. You can optionally encrypt the hard drive or SSD with a password. This is similar to BitLocker on Windows. It allows you to protect your data even if someone removes your hard drive.\nLastly, you will need to create an account on your computer with your name, username, password, and the name for your computer.\nThe installation will take a few minutes, maybe an hour, as it has to download all the software and format your disk.\nOnce it is finished, you will be asked to reboot your computer. While rebooting, it will ask you to remove the installation media (flash drive). Then you will be welcomed into your new OS/distro.\nLinux Fundamentals User privilege Most operations can be done by clicking using your mouse. Sometimes, if required (like when installing software, you might need to install it using the terminal, you might get a \u0026lsquo;Permission Denied\u0026rsquo; error. This means that you don\u0026rsquo;t have permissions. What you can do is run the command as an administrator or a the \u0026lsquo;root\u0026rsquo; user by prefixing the command using \u0026lsquo;sudo\u0026rsquo;. Then it will ask for your password and check if you also have the admin privilege. If you do, it will successfully run. By default when you install a popular distro like Ubuntu, Linux Mint, or Pop!_OS, the new user created already has admin privilege, so you will not have any issues\nInstalling Apps This is the first thing you need to do when setting up your computer. Most Linux distros come with a package manager. This is a very unique concept that is unheard of in macOS and Windows. A package manager takes care of the entire installation process; there is no need to search for the right download link in a website, and go through a complicated installation wizard. All of the beginner-friendly distros that I mentioned above are based on Debian and some are also based on Ubuntu. For these distros, the default package manager is apt.\nOn most user-friendly distros, there will be a GUI application similar to the Windows Store or the Apple App Store to help you install software.\nIf it is not there, open the terminal app (usually accessible via the keybind ctrl + alt + t) and run the following command:\napt search {program name} Replace {program name} with the actual name of the app you want to install. If you want to install Spotify for example, just search for it, and see if it is available. This command will help you find the correct app name as it might be different from what you might expect. The description of the app given can also help you identify it.\nOnce you find the right program, install it using:\nsudo apt install {program name} This will install the program. We add \u0026lsquo;sudo\u0026rsquo; in the beginning to run the command with admin/root user privilege. It will list the names of the programs and the dependencies that it is going to install, and you need to confirm by typing \u0026lsquo;y\u0026rsquo; when asked.\n If the app is not available on the main apt repository, then you can try the snaps or flatpaks. I am not going through it in detail in this guide, but you can know that it is a way for an app to be easily distributed across all linux distributions easily. Usually, the snapstore is automatically installed on Ubuntu.\n If it is not available in any of the repositories that I have mentioned (which is highly unlikely), all you need to do is go to their website, and they will give you instructions to install it from their. This may include downloading the binary from their site and then installing it. If you are using a Debian based distro, the binary file will end with \u0026lsquo;.deb\u0026rsquo; (similar to .exe in windows). Download it and try to open it. Mostly, your system will have a program installed it which is capable of recognizing the file and installing it for you.\nOpen the file manager (like windows explorer on windows) and go to the Downloads folder where the binary installer is located. Then right click in that folder to open in terminal. If your file is called for example \u0026lsquo;skype_v2.deb\u0026rsquo;, then run:\nsudo apt install ./skype_v2.deb  Another option is might include an AppImage. This is a way to distribute software in an isolated manner across all distributions. Download the file which ends in \u0026lsquo;.appimage\u0026rsquo; from the website, and try to open it. If you are not able to open it, then right click on the file and open the permissions. Change it to \u0026lsquo;executable\u0026rsquo; and then it should work fine.\n If none of these options are given, you don\u0026rsquo;t have to worry. Detailed steps or commands will be provided to you, and all you need to do is to paste them into the terminal and run them one by one in order. This is very rare, but you still might come across it. And since, you use a Debian based system which is one of the most popular distros, you don\u0026rsquo;t need to worry about some software not being available.\nRecommended Software Some new users might not be aware of the software that is available, or the good open source alternatives. So I have compiled a list of software that can be good to have.\n  Video Conferencing\n Skype (Native App) (from Microsoft - Propreitary) Jitsi (Web App) (Open Source) Discord (Web and Native App) (Proprietary) Zoom (Native App) (Proprietary) Teams (Native App) (from Microsoft - Proprietary)    Office Suite\n Libre Office (Native App) (Open Source) Microsoft Office (Web App) (Proprietary)    Multimedia player\n VLC media player Celluloid    Browser\n Brave (chromium based) Chrome (chromium based) Chromium (open source) Firefox LibreWolf (privacy oriented fork of Firefox)    Music Streaming\n Spotify (Web and Native App) (proprietary)    Note-taking (My top favorites)\n Obsidian (Native App) (open source)  It uses Markdown syntax Has a knowledge graph and other advance features for note-taking   Notion (Web app)  Simple, friendly user interface Does not need markdown knowledge Has a lot of templates to choose from      Mail clients\n Just use the browser version (Gmail, Outlook, Yahoo, etc.) Mailspring (open source)  Inlcudes fancy features such as link tracking, checking number of opens, etc.      Getting Help One of the wonderful thing about Linux is the online community. If you exclude the hate in the internet, it is very easy to find help, articles, tutorials/guides, and forums to get help in Linux. This is partly because of the very specific and helpful error messages that Linux gives rather than the blunt ones that you get on Windows or macOS. Just google the question, and you are 99.9% of the time going to get a helpful response. Checkout the Ubuntu forums, sub reddits, blogs created by others, and some discord communities.\nLastly, I am always there to help too if you have any questions. Let me know in the comments if you have any questions, and I will try my best to get it sorted out. You can also reach me via email, twitter, or other platforms. Checkout the main homepage for more details.\n","permalink":"https://blog.adityaone.com/blog/linux-intro/","summary":"Learn about Linux, its fundamental concepts, and get started right away!","title":"Ultimate Beginner's Guide for Linux"},{"content":"What is Signing? Digital signing of any kind of document, email, message, or even your commits on your Git or GitHub repository are very similar to physically signing something using a pen. It is a way to verify the authenticity of the item. In simple terms, it helps us make sure that the item actually originates or comes from the person or author that we think it comes from. Digital signing makes use of cryptographical techniques to generate a public/private key pair. The document or data is signed using the private key which is never shared, and the authenticity can be verified using the public key which can be shared with everyone.\nWhy should you sign code on GitHub When contributing code on large open source projects, sometimes it is important to make sure the repository is secure, and prevent any unauthorized changes. When you make changes, stage them, add the commit, and push the code to the remote repository on GitHub, there is a lot of metadata that is attached along with the actual code. Every commit contains the author\u0026rsquo;s name and email which can be changed. Even though you authenticate using your GitHub username and password or personal access token, it is possible to change your name and email that you use for Git to make commits.\nProof I have added the same email to my Git config and my verified email on GitHub. But I have chosen to keep my email address private in the GitHub settings to hide my actual email address and display a no-reply email address provided by GitHub instead.\nThis is how the commit looks like if I do it from my local computer which uses the email address in the git config.\nIf I make a commit or change from the GitHub.com website, it hides my personal email and uses the no-reply one.\nSo we have pretty much established that it is possible to impersonate anyone using git.\nHow to sign your commits Git and GitHub allows you to sign your code using GPG. The first step is to generate a GPG key or use an existing one. The process to install and check if it is present varies depending on the operating system, so you can check the official GitHub documentation.\nYou have to let Git know about the key that you have generated. The steps to configure this for each operating system is mentioned on this page in the GitHub Docs.\nOnce Git is configured and knows about the GPG key, you can sign a commit using the -S flag.\ngit commit -S -m \u0026quot;init commit\u0026quot; Then, all you have to do is push it to the remote GitHub repo.\ngit push Now, your co-workers and anyone else who can view your repository can be sure that you are actually signing the commits yourself.\nPlease feel free to discuss in the comments, or edit this post. Thanks.\n","permalink":"https://blog.adityaone.com/blog/sign-commits-on-github/","summary":"Learn how to sign your commits to verify the authenticity on GitHub","title":"How to Sign Commits on GitHub"},{"content":"When do you need an editor? Nowadays, the trend seems to be leaning towards web development and web apps rather than native alternatives. Along with this trend, even simple applications require more complex feature sets and are built with a mobile-first design in mind, as well as a dynamic/responsive site. Any application that requires user input as text, images, or other multimedia content, will require some sort of an editor to implement. Even a simple website where you display articles or blogs, might require users to submit comments. But users are rarely satisfied with simple text and emojis. They might prefer to add an image, make the text bold or italic, embed a YouTube video, etc. These features require developers to implement an editor of some sort into their web apps.\nHow to get Started Drop-in solution There are quite a few options available to consider when implementing a text editor in your website. The first and most straight forward option is to use something like Quill. This allows you to drop in the editor into your existing website with minor configuration and modification. You can pick a design or layout from one of the few existing options, and apply it to the website. This works for most web apps, with minor additional work arounds for frameworks like React. The video below shows an implementation to create a Google Docs clone.\nVideo by Web Dev Simplified - Google Docs Clone\nCreate your own This is something that I do not recommend, unless you think you want to completely customize the behaviour. In my case, I wanted to explore and try it out, so I decided to make it as portable as possible, and prioritize features that are important to my app.\nDecide the features that are most important. In the case of a blogging or article publishing site, there are not going to be too much of formatting required. Blocks of text or media that follow a consistent style or format has been the trend, and is also visually more pleasing. So, you can set the style before hand, and then allow users to add sections of text or media from a list of options that you provide. You can allow a title, a subtitle, a smaller heading, a standard paragraph, a quote, an image, a video (maybe a YouTube embed), etc. You can style and theme the page appropriately for these formats. Make sure you can export the content with the actual data (links in the case of images, or actual links) and the meta data to style it. JSON is a good idea. The issue that you might run into is to make certain parts of a section, like certain words, italics, bold, or underlined. This is not too important, but might be something to consider.\nThis data can now be converted and stored in any database.\nBonus (Community Comments) If you just want to implement a comment section for your website, you can use a service like Disqus. This is used on my blog that you are reading right now. You can check it out at the bottom of the blog. (No affiliation with Disqus)\nThese features can get quite advanced and distracts you from the main focus of your app. Disqus makes it dead-simple to drop it in to your app, with their simple editor for users to submit comments, reply to other comments, and react to your posts. It even includes moderation.\n","permalink":"https://blog.adityaone.com/blog/create-your-own-editor/","summary":"How to add a Text Editor to your Site? What options do you have? Things to consider.","title":"Create Your own Editor | But Should You?"},{"content":"What is a cryptocurrency? Cryptocurrencies are a form of a completely digital currency. You might think it is similar to online banking, or credit or debit cards, but all of these methods still involve a middle man - your bank or card providers. Cryptocurrencies use a technology called the blockchain to completely get rid of any third person. You can directly make transactions with whoever you want, in a secure manner, without involving any other person. There are a few popular examples of these digital currencies, like Bitcoin, Ethereum, and the recently trending Dogecoin. Bitcoin was the first major, successful attempt at a cryptocurrency, and the following currencies that were created using similar technology (but with minor differences), are called altcoins.\nWhat is the blockchain? It\u0026rsquo;s not too important to know the specifics, but most cryptocurrencies rely on this technology to function. In simple terms, the blockchain is a chronological ledger or chain of data that is updated and synchronised across multiple computers across the internet. Every transaction is public, including the unique identification for both parties involved in the transaction, and the amount transfered. There is a complex cryptographic task that the computers must solve and agree on. This is why every transaction takes around a few minutes or sometimes hours to get approved and verified. Due to this design, the data or transactions can never be \u0026ldquo;hacked\u0026rdquo; or changed. It is nearly impossible.\nHow to use it? It is meant to be a replacement for traditional currencies, but it is far from becoming widely adopted. To actually use these cryptocurrencies, you first need a wallet. This can be a physical hardware wallet that you can buy, or a digital wallet that you can download, like a mobile app. Using an app as a wallet is the easiest, and is what I recomment. You can use an app like Coinbase Wallet or Metamask. You need to buy and trade cryptocurrencies from an exchange. Make sure to do your research and use a reliable one. You can use your bank account or credit/debit card to purchase the cryptocurrency of your choice. For beginners, I recommend something like Uphold or Coinbase (Different from Coinbase Wallet). Once you are done with the purchase, these exchanges usually provide a hosted wallet which is where your crypto will be stored. It is okay to leave it there, but it is usually recommended to transfer it to a separate wallet for security reasons. So, from the hosted wallet on one of these exchanges, you can transfer the cryptocurrency to your own wallet (something like Metamask), or even withdraw it to your bank account.\nFees and costs The exact fees and cost of the transactions will vary depending on which exchange you use, but most exchanges, especially new ones, have a 0% commission and fees policy for transfering from one crypto to another, and sometimes for also buying. But you often have to pay a network fee when withdrawing to a bank account or transfering to your or someone else\u0026rsquo;s wallet. This fees depends on the network, and is often called network fees.\nThings to consider Purpose of the cryptocurrency Every currency is created with a specific purpose in mind. Consider this while making a decision to purchase or invest in cryptocurrency. Bitcoin and Ethereum for example, are very popular currencies, but are also quite slow compared to other altcoins. It takes longer for transactions to complete, and have high network fees. It is okay if you are planning to make a long term investment, but it is usually not recommended for small, frequent transactions. Bitcoin Cash (BCH) (Not Bitcoin (BTC)) is an example of an altcoin which is a fork from Bitcoin. It was made in order to be fast and scalable, and has a much lower network fee than other alternatives.\nCryptocurrency networks Multiple cryptocurrencies or tokens can use the same network to operate and function. Bitcoin uses the bitcoin network, ehtereum uses the ethereum network, Basic Attention Token (BAT - Used by the Brave browser) also uses the ethereum network, and Bitcoin Cash uses its own Bitcoin Cash network. The network used by the currency or token is important to consider, because it determines if you can convert it to another token, and how much network fees you will need to pay. Certain wallets like the Coinbase Wallet, only allow you to convert tokens to others if they use the Ethereum Network, other tokens can be stored and used, but not be converted to other forms.\nShould you use it? Cryptocurrencies are extremely volatile, and therefore have a high risk. The value of your tokens can drastically change everyday, and thus pose a problem to be used as a daily currency. But, if you want to explore and try it out, its definitely something to dig deeper into. I would recommend to start with $10 - $15 as it is mostly the minimum amount required for the purchase.\nBonus Get started for free If you use the Brave browser, which I highly recommend, you get paid for watching optional advertisements that are completely privacy focused. You get paid in BAT (Basic Attention Token) which is based on the Ethereum Network. You can link it with an Uphold account. Once you reach a sufficient balance, you can transfer it to your own wallet. No credit/debit cards are required.\nNFTs NFTs stands for Non Fungible Tokens. These are getting a lot of hype recently, and are in simple terms, a digital collectible. Its like collecting stamps or coins, but a digital version of that. They are also based on the blockchain, and help people purchase unique, non-replacable digital items, like a Tweet, an image, etc.\nCheck out this link to learn more: Forbes Advisor article\nOther resources https://cryptocurrency.org/beginners-guide\n","permalink":"https://blog.adityaone.com/blog/crypto-getting-started/","summary":"What are cryptocurrencies, how they are different, different factors to consider, and how to get started with your first purchase.","title":"Jumping on the Crypto train"},{"content":"What is Hugo? Hugo is a static-site generator that helps you generate and build static files like HTML, CSS, and JavaScript ahead of time. It is an opensource project built with Go and boasts impressive build times that seems incomparable.\nWhat does it do? It helps you convert markdown files (the files you will be writing your articles or blog posts in) to the static files that will be served later.\nHow is it different? This is different to traditional methods like a wordpress site, that has a dedicated database and a web server that needs to respond to requests, communicate with the Databse, and serve the files on every request. It is much more slower than using a static-site generator like Hugo as nothing is dynamic; we know that the content is not going to change. HTTP web servers are extremely good and fast at just serving static content. Users ask for a file, and the server just has to give it. There is no other processing involved.\nThe Benefits Your website can be deployed and hosted anywhere (On GCP cloud storage, AWS S3, Netlfify, Firebase, etc.), and can be deployed to a CDN (Content Delivery Network) so that it can be cached on a global edge network and significantly improve the performance and speed of page loads. This is especially important with poor internet connections, and for SEO (Search Engine Optimization).\nCaveats However, that does not mean Hugo can not be used for anything dynamic. If your use case if very complex such as involving user input, you might not be able to use Hugo. Using a regular website, or single-page-application with React, Angular, Vue, or Svelte might be a better option. But if all you need is a simple blog, with a few extra features, like an option for users to provide comments, Hugo has everything you need.\nGet Started The Hugo Documentation is very helpful and elaborate. It is the first place to check in case of references or issues.\nInstallation Hugo is available in all platforms (Windows, MacOS, and Linux), as a binary that you can install, or via a package manager. If you have a compatible package manager, that is the recommended way as it is the easiest and has the least amount of work to maintain\nInstall using the Binaries Availabe from their GitHub Releases page. (Choose the appropriate platform and type of file). Make sure to install it in a location that is somewhere in your PATH. usr/local/bin is the best place for Linux. Otherwise, append the location to your PATH variable.\nInstall using a Package Manager On Windows\nchoco install hugo -confirm  or\nscoop install hugo   On Linux and MacOS (Using Homebrew)\nbrew install hugo   To verify that the installation occurred successfully, run the following command.\nhugo version  There should not be any errors.\nCreating the Site Change directories into the location you want to create your project. Then run the following command with your project\u0026rsquo;s name. This will create folder that contains all the files that you need to get started.\n# Creates a new site and project called 'firstblog' hugo new site firstblog  Change directories into the project directory that was created.\ncd firstblog  You will notice a similar folder structure. The config.toml file is where all the variables and settings for your projects live. You will be able to setup and configure most of your website from that one file.\n. ├── archetypes ├── config.toml ├── content ├── data ├── layouts ├── static └── themes  If you want to change the file type for your configurations, you can change it to YAML or JSON depending on your preference. You can copy and paste the contents of the file using a tool like ConvertSimple to convert the format and syntax.\nAll of the actual content that you write as markdown files lives inside the content directory. You can organize the content in folders, and subfolders, and Hugo will automatically take care of organizing the posts as categories or subcategories.\nUse the following command to create a blank markdown file. You can specify where you want to store this file. If the file name alone is provided, then it is directly placed in the content directory.\nhugo create first-post.md  or try the following to place it in content/posts:\nhugo create posts/first-post.md   Front Matter Every markdown file that is created and used for your website has a section on the top that is unique to Hugo. It starts and ends with ---. The syntax used in this is TOML by default. You can change this default setting with the following command:\n# To convert to YML hugo convert toYAML  In the front matter, you can set options for the specific page, meta data, and other configuration that is specific to this particular page. Check out the documentation of Front Matter to learn the different options available.\nInstall a Theme One of the powers of Hugo is to utilize one of the many themes created by the community. Check out the Complete List and choose one of the themes. Read the documentation and install the theme. This process is very straightforward. Mostly, you will have to download the code, either manually, or using Git, and place it in the themes folder, then inside another folder with the name of the theme you chose.\nThen make sure to go to the config file and update the theme variable with the name of the theme you have chosen.\nRunning the Site Hugo has an in-built web server that helps you view the site locally, and automatically watches your files for changes, and re-runs when the changes occur.\nhugo server -D  Deployment With the following command, Hugo builds your site and outputs the final static content to the public directory by default. That can be modified in the config file if needed. The contents of this file needs to be deployed with whatever hosting provider you chose to use.\nhugo -D  Bonus content Hosting Hugo is very feature-rich, and is an amazing product if used wisely. You could set up a CI/CD Pipeline to run every time you make changes and deploy to your hosting provider of choice.\nI have setup this blog using GitHub Actions and Firebase. Every time code is merged, a commit is made to the main branch, or a Pull Request is merged, a Firebase workflow runs on GitHub in the cloud that deploys the content of the public directory to Firebase Hosting.\nComments You can add a comments or discussion section to all of your pages (or select ones) easily using Disqus. Instructions and setup is very straightforward and simple.\n That\u0026rsquo;s all for this post and tutorial. I hoped this has helped you and given you an idea of how things work. You can read all my posts on Medium and Dev also.\n","permalink":"https://blog.adityaone.com/blog/hugo-blog/","summary":"Learn and Create a blog with Hugo\u0026hellip;","title":"How to Create a Blog using Hugo"},{"content":"Activity Details  The Online, Global, Student Community\n  Student\u0026rsquo;s Name: Aditya Vinodh Arjun\nActivity Name: SideTracked\nTotal number of Hours: 200 (Current - Subject to change)\nStart Date: January 2, 2021\nEnd Date: Ongoing\n🔗 Visit the Site\n   SideTracked is an initiative that I started individually and invited my fellow students to be a part of. It was always my dream to live in a world in which no child or student is restricted in his ability to learn new interests or passions to explore the world effectively. During my journey as a learner, I have hit countless roadblocks as I was stuck with a problem which I did not have the knowledge or skills to fix. It is very likely that friends, family members, or even teachers at school do not have any experience in the field that you want to learn and explore, and this prevents students from getting inspired, as they instead get demotivated from trying their best.\nThis is why I came up with an idea to build an online platform or website which will be fully interactive and responsive, so that students of any age group or locality, can signup and be a part of a community that is greater than themselves. Students have the ability to read articles written by other students, and also have an option to create an \u0026ldquo;Interest Group\u0026rdquo; (like a channel on YouTube), and post rich articles under that group so that content is easily organized according to author, topic, and chronological order, while still maintaining any creativity that student will like to portray in their writing.\nStudents have the ability to showcase their artwork through images and videos, they can create tutorials for programming, they can give their thoughts and opinions about the latest news, they can curate a list of helpful resources to kick-start another student\u0026rsquo;s journey, and so much more is possible.\n I built this project using the skills I learn over multiple free online courses on web programming as it was an area of my interest. My deep passion for computer science exists because of the magic I can make if I use it effectively to help other people around me. I have the power to instantly reach the entire population of the world if I wanted to. That is what inspired me to work on this project. This was the first time I worked on a project this large.\nI developed this website from scratch as a single-page-application (SPA) using Angular (JavaScript framework), which is a technology developed by Google, that uses Typescript. To simplify the app and increase the functionality and features, I used Firebase as a back-end to manage user sign-in (authentication and authorization), a database, cloud storage, and cloud functions for complex business logic. This enabled me to increase my productivity and boost the feature set of the app.\n Reflection This is a project that is extremely personal for me, and was never meant to be a one-time thing. I consider this a CAS Project, experience or activity, but it was certainly not the reason I started this. It was a very complex project with a lot of moving parts. There was a lot of technical details and limitations that I had to overcome on my own without anyone\u0026rsquo;s help which was sometimes demotivating. I slowly pushed myself and continued to work on it regardless of how much time it took. When I began the project, I immediately reached out to a few of my friends and asked them if they could join and be a part of the community as they would share their knowledge and interests on the platform. Around 5 or 6 of my friends said they were interested and joined. During that time, I had just began developing the website, so I was coordinating with them to write, review and store the articles for future use when the website was actually ready for production. But as soon as school started and the workload increased, everyone backed out except one. The website was ready, but I had nobody to help me out and populate it with the content. I was quite dejected, even today as I am writing this reflection, but I continued anyways with my interest group on technology called \u0026ldquo;Tech Democratized\u0026rdquo;, and my sister\u0026rsquo;s and friends on nature.\nIt was very hard to coordinate with everyone and communicate effectively as I had not met any of my classmates for over a year due to the pandemic. All the operations took place online, and I had to make sure I balanced the frequency of my checks to ensure everyone continued their work, however did not feel too pressured.\nBut reflecting on this project and experience after it has been completed, I am proud of the end-product. I had to challenge myself and come out of my comfort zone to interact and communicate with others in my network to successfully launch this website. I think I have successfully demonstrated myself as being a risk-taker, especially in very uncertain times where it was difficult to set my priorities, being an effective communicator, and approaching decisions with a more open-minded approach to gather productive feedback and suggestions from friends and other users on this platform.\nLearning Outcomes Identify your own strengths and develop areas for personal growth. From the early days and the brainstorming of the initial ideas, I have been quite aware of my weaknesses and strengths. In terms of weaknesses, I accepted the fact that my current state of socialization and communication was not going to suffice, and I had to challenge myself and improve on that frontier in order to develop personally, as well as succeed in terms of this project.\nOn the other hand, I had the knowledge and skills required to understand how different things worked on a technical level, different consequences of considering different approaches, and the ability to analyse and reason out different decisions. I also felt that I was able to understand and relate to people I was communicating with even though the communication itself was not perfect. I was confident that if I effectively utilitzed my technical skills and approached people with the right mindset, I will be able to grow as better human being part of a larger society.\nI feel that I was able to identify these strength and weaknesses and establish improvement in these areas over the few months as this activity progressed.\nDemonstrate that challenges have been undertaken, developing new skills in the process. I think I was able to indentify and accept multiple technical and personal challenges while embarking on this journey. A few examples include the requirement of additional technical skills to develop and create a website to support the online platform that I was aspiring for, and the networking skills that I did not have and have never tried to demonstrate in the past.\nOn completion of the MVP of this project, I think I was able to begin my journey in acquiring these skills as they were of vital importance to the functioning if this project. This was important in order to connect with people of different interests and skills to utilize their knowledge and experience to contribute to the community I am trying to create.\nDemonstrate how to initiate and plan a CAS experience. My project began with the identification of an area of my society that has a problem that I can attempt to solve in an efficient manner. This CAS experience or activity was chosen specifically to address issues in my society and make a meaningful contribution. Once I finalized on the exact objectives, I brainstormed the requirements and skills I needed in order to complete it. Over the next few days, I was researching, gathering information, and learning the components required to execute my plan. Then, the actual work of bringing the platform to life began, as I desgined, developed and tested the website. This took around 2 months and included regular checks. Finally, it was time to spread awareness, onboard interested students, and reflect on my unique learning experience.\nShow commitment to and perseverance in CAS experiences. I think I have demonstrated my commitment towards this effort on multiple occasions throughout this journey, as it was never meant to be a CAS experience during initial stages. There were multiple times when I had too much work, and this was no where near other important work that had significantly higher priority. However, I took time, spaced out my schedule, and gradually began to approach my target as I remembered the final goal. It was definitely rewarding to finally see the end-product, especially considering the hard-work I had put in.\nDemonstrate the skills and recognize the benefits of working collaboratively. This activity would not be possible without the collaboration with many other students and my friends in order to get collective, productive feedback and suggestions, and also build this community and benefit from each others. Collaboration was also vital in building and curating content for the platform.\nOn the other hand, connecting with others, and actually taking the time to listen and understand their perspective, gives me a whole new perspective, as I understand the background that everyone comes from, and it helps me improve better as a human being, and also for interest of this platform.\nDemonstrate engagement with issues of global significance. My core values and idealogy behind this entire project is to provide equal quality of resources and education to any aspiring student or learner, regardless of financial capability, geographic location, race, etc. This mostly ties with the fourth Sustainable Development Goal(s) set by the United Nations (UN)\n Goal 4 Quality Education\nEnsure inclusive and equitable quality education and promote lifelong learning opportunities for all.\n By creating a platform where all students are free to aqcuire the skills and knowledge required for them to start their own journey along a path headed toward something they are deeply passionate about, or by sharing their experience and tips with the rest of the community, I am trying to create a helpful, safe, learning environment to reimagine the traditional methods of learning and exploration.\nRecognize and consider the ethics of choices and actions. The most significant aspect of this project is the use and integration with technology. This allowed me to instantly widen my reach to almost the entire world (7.8 billion people), or atleast people with an internet connection. Every time I worked on a new feature, I was trying to figure out the technical details to enable my app to work, and I understood for the first time, the exact way that the technology works. I got a better picture of what data is usually handled, how to secure the user\u0026rsquo;s data, how to store and manage it, how, and how often to update the user on changes, etc. These were questions I never stopped to think before, but was a fundamental concept that I had to think and make careful decisions.\nOn the other hand, the use of technology and creation of a platform similar to social media, was itself an ethical decision. The design and functionality of the website was fully dedicated for young minds to safely and freely explore the platform without any hesitation or fear of misuse.\n","permalink":"https://blog.adityaone.com/cas/sidetracked/","summary":"The Online, Global, Student Community","title":"SideTracked"},{"content":"Hello This is my first post from my brand-new blog. I am currently a high-school student at the time I am writing this post, who is extremely passionate about technology and its applications to help eradicate any kind of inequality that exists in this world. It may never be possible to actually achieve that goal, but I will always try.\nI have previous experience working on projects with HTML, CSS, JavaScript, mainly on the front-end UI/UX, also with TypeScript and Angular for complex websites. I have also worked server-side with Node.js and Python to build web-servers, rest APIs, etc. I have recently dived into the world of mobile-app development as I started learning Flutter to build beautiful performant apps for Android and iOS simultaneously with a single code-base using Dart.\nPlease reach out to me if you just want to have a chat, or are interested in some of the work I do. My social links are in the homepade. You can check out my projects and collaborate with me on GitHub, check out other posts on DEV, and reach out to me on social media or via email.\nThank you for visiting this blog. Cya 👋\n","permalink":"https://blog.adityaone.com/blog/my-first-post/","summary":"Welcome to my Blog\u0026hellip;","title":"My First Post"}]